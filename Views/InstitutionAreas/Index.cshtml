@*@model IEnumerable<ZaculeuValley.IxchelAdmin.Models.InstitutionArea>*@

@model PaginatedList<ZaculeuValley.IxchelAdmin.Models.InstitutionArea>

@{
    ViewData["Title"] = "Index";
}

<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="/Home"> @ViewBag.InstitutionName</a></li>
        <li class="breadcrumb-item active" aria-current="page">Áreas</li>
    </ol>
</nav>

<h1>Áreas</h1>

<p>
    <a asp-action="Create">Crear Nuevo</a>
</p>

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Busca por nombre: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Buscar" /> |
            <a asp-action="Index">Regresar a lista completa</a>
        </p>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
@*            <th class="text-center">
                @if (ViewData["CurrentSort"] != null && ViewData["CurrentSort"].ToString() == "id_desc")
                {
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["IdSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">ID ↓</a>
                }
                else
                {
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["IdSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">ID ↑</a>
                }
            </th>*@
            <th class="text-center">
                @if (ViewData["CurrentSort"] != null && ViewData["CurrentSort"].ToString() == "areacode_desc")
                {
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["AreaCodeSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Código Área ↓</a>
                }
                else
                {
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["AreaCodeSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Código Área ↑</a>
                }          
                @*@Html.DisplayNameFor(model => model.AreaCode)*@
            </th>
            <th class="text-center">
                @if (ViewData["CurrentSort"] != null && ViewData["CurrentSort"].ToString() == "countrycode_desc")
                {
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["CountryCodeSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">ID Páis ↓</a>
                }
                else
                {
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["CountryCodeSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">ID Páis ↑</a>
                }
                
                @*@Html.DisplayNameFor(model => model.IdinstitutionCountryNavigation)*@
            </th>
            
            <th class="text-center">
                @if (ViewData["CurrentSort"] != null && ViewData["CurrentSort"].ToString() == "name_desc")
                {
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Nombre Area ↓</a>
                }
                else
                {
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Nombre Area ↑</a>
                }
                @*@Html.DisplayNameFor(model => model.AreaName)*@
            </th>
            
            <th class="text-center">
                @if (ViewData["CurrentSort"] != null && ViewData["CurrentSort"].ToString() == "id_desc")
                {
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["EnabledSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Hábilitado ↓</a>
                }
                else
                {
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["EnabledSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Hábilitado ↑</a>
                }
                @*@Html.DisplayNameFor(model => model.Enabled)*@
            </th>
            <th class="text-center"></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td class="text-center">
                    @Html.DisplayFor(modelItem => item.AreaCode)
                </td>
                <td class="text-center">
                    @Html.DisplayFor(modelItem => item.IdinstitutionCountryNavigation.CountryName)
                </td>
                <td class="text-center">
                    @Html.DisplayFor(modelItem => item.AreaName)
                </td>
                <td class="text-center">
                    @Html.DisplayFor(modelItem => item.Enabled)
                </td>
                <td class="text-center">
                    <a asp-action="Delete" asp-route-id="@item.IdinstitutionArea">Eliminar</a> |
                    <a asp-action="Details" asp-route-id="@item.IdinstitutionArea">Detalles</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Anterior
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Siguiente
</a>
