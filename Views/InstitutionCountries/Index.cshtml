@*@model IEnumerable<ZaculeuValley.IxchelAdmin.Models.InstitutionCountry>*@

@model PaginatedList<ZaculeuValley.IxchelAdmin.Models.InstitutionCountry>

@{
    ViewData["Title"] = "Index";
}
<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="/Home"> @ViewBag.InstitutionName</a></li>
        <li class="breadcrumb-item active" aria-current="page">Países</li>
    </ol>
</nav>
<h1>Países</h1>

<p>
    <a asp-action="Create">Crear Nuevo</a>
</p>

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Busca por nombre: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Buscar" /> 
            @*<a asp-action="Index">Regresar a lista completa</a>*@
        </p>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th class="text-center">
                @if (ViewData["CurrentSort"] != null && ViewData["CurrentSort"].ToString() == "id_desc")
                {
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["IdSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Código País ↓</a>
                }
                else
                {
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["IdSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Código País ↑</a>
                }
                
                @*@Html.DisplayNameFor(model => model.CountryCode)*@
            </th>
            <th class="text-center">
                @if (ViewData["CurrentSort"] != null && ViewData["CurrentSort"].ToString() == "name_desc")
                {
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Nombre País ↓</a>
                }
                else
                {
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Nombre País ↑</a>
                }
                @*@Html.DisplayNameFor(model => model.CountryName)*@
            </th>
            <th class="text-center">
                @if (ViewData["CurrentSort"] != null && ViewData["CurrentSort"].ToString() == "phone_desc")
                {
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["PhoneSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Prefijo Telefónico ↓</a>
                }
                else
                {
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["PhoneSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Prefijo Telefónico ↑</a>
                }
                
                @*@Html.DisplayNameFor(model => model.CountryPhoneCode)*@
            </th>
            <th class="text-center">
                @if (ViewData["CurrentSort"] != null && ViewData["CurrentSort"].ToString() == "domain_desc")
                {
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["DomainSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Dominio ↓</a>
                }
                else
                {
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["DomainSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Dominio ↑</a>
                }
                
                @*@Html.DisplayNameFor(model => model.CountryDomainName)*@
            </th>
            <th class="text-center">
                @if (ViewData["CurrentSort"] != null && ViewData["CurrentSort"].ToString() == "id_desc")
                {
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["EnabledSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Hábilitado ↓</a>
                }
                else
                {
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["EnabledSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Hábilitado ↑</a>
                }
                @*@Html.DisplayNameFor(model => model.Enabled)*@
            </th>
           
            <th class="text-center"></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>

            <td class="text-center">
                @Html.DisplayFor(modelItem => item.CountryCode)
            </td>
            <td class="text-center">
                @Html.DisplayFor(modelItem => item.CountryName)
            </td>
            <td class="text-center">
                @Html.DisplayFor(modelItem => item.CountryPhoneCode)
            </td>
            <td class="text-center">
                @Html.DisplayFor(modelItem => item.CountryDomainName)
            </td>
            <td class="text-center">
                @Html.DisplayFor(modelItem => item.Enabled)
            </td>
            
            <td class="text-center">
                <a asp-action="Delete" asp-route-id="@item.IdinstitutionCountry">Eliminar</a> |
                <a asp-action="Details" asp-route-id="@item.IdinstitutionCountry">Detalles</a> @*|
                <a asp-action="Delete" asp-route-id="@item.IdinstitutionCountry">Borrar</a>*@
            </td>
        </tr>
}
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}


<div class="float-right mb-lg-5 pt-2">
    <!-- Dropdown to select page size -->
    <div class="d-inline ml-3">
        <label for="pageSize">Tamaño de la página:</label>
        <select id="pageSize" name="pageSize" onchange="changePageSize()">
            <option value="5" selected="@(Model.PageSize == 5)">5</option>
            <option value="10" selected="@(Model.PageSize == 10)">10</option>
            <option value="50" selected="@(Model.PageSize == 50)">50</option>
            <option value="200" selected="@(Model.PageSize == 200)">200</option>
        </select>
    </div>
</div>
<div class="float-left mb-lg-5 pt-2">
    <!-- Pagination links -->
    <a asp-action="Index" asp-route-sortOrder="@ViewData["CurrentSort"]" asp-route-pageNumber="@(Model.PageIndex - 1)" asp-route-currentFilter="@ViewData["CurrentFilter"]" class="btn btn-default @prevDisabled d-inline">Anterior</a>
    <p class="d-inline">[ @Model.PageIndex / <a asp-action="Index" asp-route-sortOrder="@ViewData["CurrentSort"]" asp-route-pageNumber="@(Model.TotalPages)" asp-route-currentFilter="@ViewData["CurrentFilter"]">@Model.TotalPages </a>]</p>
    <a asp-action="Index" asp-route-sortOrder="@ViewData["CurrentSort"]" asp-route-pageNumber="@(Model.PageIndex + 1)" asp-route-currentFilter="@ViewData["CurrentFilter"]" class="btn btn-default mb-5 @nextDisabled d-inline">Siguiente</a>
</div>
<div class="clearfix"></div>



<script>
    function changePageSize() {
        var pageSize = document.getElementById("pageSize").value;
        var urlParams = new URLSearchParams(window.location.search);
        urlParams.set("pageSize", pageSize);
        window.location.search = urlParams.toString();
    }
</script>
@*<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Anterior
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Siguiente
</a>*@
