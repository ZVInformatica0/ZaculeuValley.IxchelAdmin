@{
    ViewData["Title"] = "HomePage";
}
@model List<ControllerListViewModel>

@{
    var excludedControllers = new List<string> { "PermissionRols", "Permissions", "Rols", "Users", "UserRols", "Institutions" };
}

<div class="text-center mt-5 mb-5">
    <h2>@ViewBag.InstitutionName</h2>
</div>

<table class="table">
    <thead>
        <tr>
            <th>Nombre</th>
            <th>Acción</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var controller in Model.OrderBy(c => GetDisplayOrder(c.DisplayedName)))
        {
            if (!excludedControllers.Contains(controller.DisplayedName))
            {
                <tr>
                    <td>@GetDisplayName(controller.DisplayedName)</td>
                    <td><a href="@controller.ApiUrl">Editar</a></td>
                </tr>
            }
        }
    </tbody>
   @* <tbody>
        @foreach (var controller in Model.OrderBy(c => GetDisplayOrder(c.DisplayedName)))
        {
            @if (controller.DisplayedName != "Institutions") // No incluir "Institutions" 
            {
                <tr>
                    <td>@GetDisplayName(controller.DisplayedName)</td> <!--Con esta condicional se cambia el nombre -->
                    <td><a href="@controller.ApiUrl">Editar</a></td>
                </tr>
            }
        }
    </tbody>*@
</table>

@functions {
    string GetDisplayName(string displayedName)
    {
        // Manual cambio de nombres
        if (displayedName == "InstitutionDistricts")
            return "Distritos";
        else if (displayedName == "InstitutionCountries")
            return "Países";
        else if (displayedName == "InstitutionAreas")
            return "Áreas";
        else if (displayedName == "FacilityTypes")
            return "Tipos de Instalaciones";
        else if (displayedName == "Facilities")
            return "Instalaciones";
        // Return el nombre original si no se realiza ningun cambio en el nombre
        return displayedName;
    }

    int GetDisplayOrder(string displayedName)
    {
        // Specify the desired display order of the names
        if (displayedName == "InstitutionCountries")
            return 1;
        else if (displayedName == "InstitutionAreas")
            return 2;
        else if (displayedName == "InstitutionDistricts")
            return 3;
        else if (displayedName == "Facilities")
            return 4;
        else if (displayedName == "FacilityType")
            return 5;
        //Asignar un numero mayor a los nombres que no esten en eñ orden deseado
        return int.MaxValue;
    }
}



@*@{
    ViewData["Title"] = "Home Page";
}
@model List<ControllerListViewModel>



<div class="text-center">
    <h2>Ixchel Administrador</h2>
</div>

<div class="text-center">
    <h1 class="display-4">Bienvenido</h1>
    <p>Documentación <a href="https://docs.microsoft.com/aspnet/core">ASP.NET Core</a>.</p>
</div>

<table class="table">
    <thead>
        <tr>
            <th class="text-center">Nombre</th>
            <th class="text-center">Acción</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var controller in Model.OrderByDescending(c => c.DisplayedName))
        {
            <tr>
                <td class="text-center">@controller.DisplayedName</td>
                <td class="text-center"><a href="@controller.ApiUrl">Editar</a></td>
            </tr>
        }
    </tbody>
</table>
*@



